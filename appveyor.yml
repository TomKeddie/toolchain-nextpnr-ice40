image:
- Visual Studio 2017

environment:
  APPVEYOR_SAVE_CACHE_ON_ERROR: true
  NEXTPNR_COMMIT: 79dbeda0f3b73d149fcd1f39cb7110cf6f8a6237
  NEXTPNR_URI: https://github.com/xobs/nextpnr.git
  VCPKG_COMMIT: edaf3bf91e6b3c33943d5006f6b34fe98b18e1d9
  PYTHON_URI: https://www.python.org/ftp/python/3.7.3/python-3.7.3-embed-amd64.zip
  matrix:
    # MSVC
    - TARGET: x86_64-pc-windows-msvc

install:
  - ps: |
      If ($Env:TARGET -eq 'x86_64-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw64\bin'
      } ElseIf ($Env:TARGET -eq 'i686-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw32\bin'
      }
      Add-Type -AssemblyName System.IO.Compression.FileSystem
      cd C:\tools\vcpkg
      git checkout $env:VCPKG_COMMIT
      vcpkg integrate install
      vcpkg install boost-filesystem:x64-windows-static boost-program-options:x64-windows-static boost-thread:x64-windows-static boost-python:x64-windows-static eigen3:x64-windows-static
      cd C:\tools
      Invoke-WebRequest -uri $env:PYTHON_URI -OutFile C:\tools\python.zip
      [System.IO.Compression.ZipFile]::ExtractToDirectory("C:\tools\python.zip", "C:\tools\Python")
      cd $env:APPVEYOR_BUILD_FOLDER
      git clone $env:NEXTPNR_URI
      cd nextpnr
      git checkout $env:NEXTPNR_COMMIT
      [System.IO.Compression.ZipFile]::ExtractToDirectory("C:/tools/Python/python37.zip", "$($env:APPVEYOR_BUILD_FOLDER)\nextpnr\Lib")
      cmake -DCMAKE_TOOLCHAIN_FILE=c:/tools/vcpkg/scripts/buildsystems/vcpkg.cmake -DARCH=ice40 "-DICEBOX_ROOT=$($env:APPVEYOR_BUILD_FOLDER.replace("\", "/"))/icebox" -DCMAKE_TOOLCHAIN_FILE=C:/tools/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=x64-windows-static -G "Visual Studio 15 2017 Win64" -DPYTHON_EXECUTABLE=C:/tools/Python/python.exe -DSTATIC_BUILD=ON -DBUILD_GUI=OFF .
      cmake --build . --config Release

      $SRC_DIR = "$($env:APPVEYOR_BUILD_FOLDER)\nextpnr\Release"
      $STAGE = [System.Guid]::NewGuid().ToString()

      Set-Location $ENV:Temp
      New-Item -Type Directory -Name $STAGE
      Set-Location $STAGE

      $ZIP = "$SRC_DIR\nextpnr-$($Env:APPVEYOR_REPO_TAG_NAME)-windows_amd64.zip"

      # TODO Update this to package the right artifacts
      Copy-Item "$SRC_DIR\release\*.exe" '.\'

      [System.IO.Compression.ZipFile]::CreateFromDirectory($STAGE, $ZIP)

      Push-AppveyorArtifact "$ZIP"

      Remove-Item *.* -Force
      Set-Location ..
      Remove-Item $STAGE
      Set-Location $SRC_DIR

# # TODO This is the "test phase", tweak it as you see fit
# test_script:
#   # we don't run the "test phase" when doing deploys
#   - if [%APPVEYOR_REPO_TAG%]==[false] (
#       cargo build --target %TARGET% &&
#       cargo build --target %TARGET% --release
#     )

# before_deploy:
  # TODO Update this to build the artifacts that matter to you
  # - ps: ci\before_deploy.ps1

deploy:
  artifact: /.*\.zip/
  auth_token:
    secure: '6eJOjWv2eburw+V4lUSkAN5OCs1fYr1C96WgULOZzgYDT7DLhC0oaaGuN9jeIw6z'
  description: 'Automated release'
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    RUST_VERSION: stable
    appveyor_repo_tag: true
  provider: GitHub

cache:
  - c:\tools\vcpkg\installed\
  - C:\tools\Python364

branches:
  only:
    # Release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  - provider: Email
    to:
      - sean@xobs.io
    on_build_status_changed: true
    on_build_success: false

# Building is done in the test phase, so we disable Appveyor's build phase.
build: false